module Moon
  class Input
    # @return [Hash<Symbol, Array<String>>]
    KEY_TO_HUMAN = {
      space: %w[Spacebar],
      apostrophe: %w[' "],
      comma: %w[, <],
      minus: %w[- _],
      period: %w[. >],
      slash: %w[/ ?],
      n0: %w[0 )],
      n1: %w[1 !],
      n2: %w[2 @],
      n3: %w[3 #],
      n4: %w[4 $],
      n5: %w[5 %],
      n6: %w[6 ^],
      n7: %w[7 &],
      n8: %w[8 *],
      n9: %w[9 (],
      semicolon: %w[; :],
      equal: %w[= +],
      a: %w[a A],
      b: %w[b B],
      c: %w[c C],
      d: %w[d D],
      e: %w[e E],
      f: %w[f F],
      g: %w[g G],
      h: %w[h H],
      i: %w[i I],
      j: %w[j J],
      k: %w[k K],
      l: %w[l L],
      m: %w[m M],
      n: %w[n N],
      o: %w[o O],
      p: %w[p P],
      q: %w[q Q],
      r: %w[r R],
      s: %w[s S],
      t: %w[t T],
      u: %w[u U],
      v: %w[v V],
      w: %w[w W],
      x: %w[x X],
      y: %w[y Y],
      z: %w[z Z],
      left_bracket: %w([ {),
      backslash: %w[\\ |],
      right_bracket: %w(] }),
      grave_accent: %w[` ~],
      world_1: %w[],
      world_2: %w[],
      escape: %w[ESC],
      enter: %w[Return],
      tab: %w[Tab],
      backspace: %w[Backspace],
      insert: %w[Insert],
      delete: %w[Delete],
      right: %w[Right],
      left: %w[Left],
      down: %w[Down],
      up: %w[Up],
      page_up: %w[Page-Up],
      page_down: %w[Page-Down],
      home: %w[Home],
      end: %w[End],
      caps_lock: %w[Caps-Lock],
      scroll_lock: %w[Scroll-Lock],
      num_lock: %w[Num-Lock],
      print_screen: %w[Print-Screen],
      pause: %w[Pause],
      f1: %w[F1],
      f2: %w[F2],
      f3: %w[F3],
      f4: %w[F4],
      f5: %w[F5],
      f6: %w[F6],
      f7: %w[F7],
      f8: %w[F8],
      f9: %w[F9],
      f10: %w[F10],
      f11: %w[F11],
      f12: %w[F12],
      f13: %w[F13],
      f14: %w[F14],
      f15: %w[F15],
      f16: %w[F16],
      f17: %w[F17],
      f18: %w[F18],
      f19: %w[F19],
      f20: %w[F20],
      f21: %w[F21],
      f22: %w[F22],
      f23: %w[F23],
      f24: %w[F24],
      f25: %w[F25],
      kp_0: %w[Numpad-0],
      kp_1: %w[Numpad-1],
      kp_2: %w[Numpad-2],
      kp_3: %w[Numpad-3],
      kp_4: %w[Numpad-4],
      kp_5: %w[Numpad-5],
      kp_6: %w[Numpad-6],
      kp_7: %w[Numpad-7],
      kp_8: %w[Numpad-8],
      kp_9: %w[Numpad-9],
      kp_decimal: %w[Numpad-.],
      kp_divide: %w[Numpad-/],
      kp_multiply: %w[Numpad-*],
      kp_subtract: %w[Numpad--],
      kp_add: %w[Numpad-+],
      kp_enter: %w[Numpad-Return],
      kp_equal: %w[Numpad-=],
      left_shift: %w[Left-Shift],
      left_control: %w[Left-Control],
      left_alt: %w[Left-Alt],
      left_super: %w[Left-Super],
      right_shift: %w[Right-Shift],
      right_control: %w[Right-Control],
      right_alt: %w[Right-Alt],
      right_super: %w[Right-Super],
      menu: %w[Menu],
      mouse_button_1: %w[Mouse-Button-1],
      mouse_button_2: %w[Mouse-Button-2],
      mouse_button_3: %w[Mouse-Button-3],
      mouse_button_4: %w[Mouse-Button-4],
      mouse_button_5: %w[Mouse-Button-5],
      mouse_button_6: %w[Mouse-Button-6],
      mouse_button_7: %w[Mouse-Button-7],
      mouse_button_8: %w[Mouse-Button-8],
      mouse_left: %w[Mouse-Left],
      mouse_right: %w[Mouse-Right],
      mouse_middle: %w[Mouse-Middle],
    }

    # @param [Symbol] key
    # @return [Array<String>]
    def self.key_to_human_readable(key)
      KEY_TO_HUMAN.fetch(key.to_sym)
    end
  end
end
